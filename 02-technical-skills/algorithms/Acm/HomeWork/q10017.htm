<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=big5">
<title></title>
</head>
<body>

<h1 align="center">Q10017: The Never Ending Towers of Hanoi</h1>          
<p>在資料結構的課程中常常以一種叫做漢諾塔(the Tower of Hanoi)的遊戲來說明遞迴（recursion）的運作。現在就讓我們來說明一下其規則：</p>  
<ul>
  <li>有三根柱子：A、B、C</li>
  <li>有n個盤子，每個盤子大小均不相同</li>
  <li>一開始時，所有的盤子都疊在A柱子中，並且由上到下盤子是由小到大排列。</li>
  <li>遊戲的目的是把所有的盤子從A柱子搬到C柱子。</li>
  <li>一次僅能搬動一個盤子。可以搬到空的柱子或是搬到一根柱子而其最上方的盤子比要搬移的盤子大。</li>
</ul>
<p>你的任務是寫一個程式來一步一步的展示搬移的過程。</p>
<p align="left" style="background-color: #FFFF00"><span style="background-color: #FFFF00"><b>Input</b></span></p>               
<p>每組測試資料一列，含有2個整數n,m。n（1 &lt;= n &lt;= 250）代表盤子的數目。m（0 
&lt;= m &lt;= 2<sup>n</sup>-1）代表要搬移的次數。並且你可以假設m絕對小於2<sup>16</sup>.</p>    
<p>n=0 m=0代表輸入結束。</p>    
<p align="left" style="background-color: #FFFF00"><span style="background-color: #FFFF00"><b>Output</b></span></p>                
<p>對每一組測試資料，輸出搬移的過程。請參考Sample Output。</p> 
<p align="left" style="background-color: #00FF00"><span style="background-color: #00FF00"><b>Sample                            
Input</b></span></p>                              
<pre>3 7
16 2
0 0</pre>
<p align="left" style="background-color: #00FF00"><span style="background-color: #00FF00"><b>Sample                                 
Output</b></span></p>                              
<pre>Problem #1


A=&gt;   3 2 1
B=&gt;  
C=&gt;  

A=&gt;   3 2
B=&gt;  
C=&gt;   1

A=&gt;   3
B=&gt;   2
C=&gt;   1

A=&gt;   3
B=&gt;   2 1
C=&gt;  

A=&gt;  
B=&gt;   2 1
C=&gt;   3

A=&gt;   1
B=&gt;   2
C=&gt;   3

A=&gt;   1
B=&gt;  
C=&gt;   3 2

A=&gt;  
B=&gt;  
C=&gt;   3 2 1

Problem #2


A=&gt;   16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1
B=&gt;  
C=&gt;  

A=&gt;   16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
B=&gt;   1
C=&gt;  

A=&gt;   16 15 14 13 12 11 10 9 8 7 6 5 4 3
B=&gt;   1
C=&gt;   2
</pre>
                            
</body>                            
                            
</html>                            
